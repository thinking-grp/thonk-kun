"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[252],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=a,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,title:"Know the development rules of thinkerAI",slug:"/development-rules"},i="Know the development rules of thinkerAI",o={unversionedId:"development/development-01-development-rules",id:"development/development-01-development-rules",title:"Know the development rules of thinkerAI",description:"By knowing the development rules of thinkerAI, it will be easier to create pull requests and version updates.",source:"@site/docs/development/development-01-development-rules.md",sourceDirName:"development",slug:"/development-rules",permalink:"/thinkerAI/docs/development-rules",draft:!1,editUrl:"https://github.com/thinking-grp/thinkerAI-docs/edit/main/docs/development/development-01-development-rules.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Know the development rules of thinkerAI",slug:"/development-rules"},sidebar:"tutorialSidebar",previous:{title:"Contributing",permalink:"/thinkerAI/docs/category/contributing"},next:{title:"Create an issue for thinkerAI",permalink:"/thinkerAI/docs/create-issues"}},d={},s=[{value:"Coding Guidelines",id:"coding-guidelines",level:2},{value:"1. Naming Conventions",id:"1-naming-conventions",level:3},{value:"2. Indentation",id:"2-indentation",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"4. Other Guidelines",id:"4-other-guidelines",level:3},{value:"Branching rules",id:"branching-rules",level:2},{value:"Release cycle",id:"release-cycle",level:2},{value:"Versioning",id:"versioning",level:3}],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"know-the-development-rules-of-thinkerai"},"Know the development rules of thinkerAI"),(0,a.kt)("p",null,"By knowing the development rules of thinkerAI, it will be easier to create pull requests and version updates."),(0,a.kt)("h2",{id:"coding-guidelines"},"Coding Guidelines"),(0,a.kt)("p",null,"At thinkerAI, we have established the following guidelines for code formatting, naming conventions, commenting, error handling, and more."),(0,a.kt)("h3",{id:"1-naming-conventions"},"1. Naming Conventions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use PascalCase for class names (e.g. TestClass)."),(0,a.kt)("li",{parentName:"ul"},"Use camelCase for variable and function names (e.g. testFunction)."),(0,a.kt)("li",{parentName:"ul"},"Use kebab-case for command-line arguments (e.g. test-id).")),(0,a.kt)("h3",{id:"2-indentation"},"2. Indentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use spaces for indentation."),(0,a.kt)("li",{parentName:"ul"},"Set the indentation width to 2.")),(0,a.kt)("h3",{id:"3-error-handling"},"3. Error Handling"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Specify as specific error types as possible when catching errors."),(0,a.kt)("li",{parentName:"ul"},"Use try-catch syntax for error handling."),(0,a.kt)("li",{parentName:"ul"},"Provide detailed error messages when handling exceptions."),(0,a.kt)("li",{parentName:"ul"},"Include the current context (e.g. file name, line number, variable name, etc.) in error messages.")),(0,a.kt)("h3",{id:"4-other-guidelines"},"4. Other Guidelines"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Avoid using magic numbers."),(0,a.kt)("li",{parentName:"ul"},"Use comments to clarify the intent of the code.")),(0,a.kt)("h2",{id:"branching-rules"},"Branching rules"),(0,a.kt)("p",null,"thinkerAI adopts ",(0,a.kt)("a",{parentName:"p",href:"https://nvie.com/posts/a-successful-git-branching-model/"},(0,a.kt)("strong",{parentName:"a"},"A successful Git branching model")),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Origin"),(0,a.kt)("th",{parentName:"tr",align:null},"Destination"),(0,a.kt)("th",{parentName:"tr",align:null},"Branch naming convention"),(0,a.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"main")),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"To manage the released source code")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"develop")),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"To manage the source code being developed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"hotfix")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"main")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"main")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"develop")),(0,a.kt)("td",{parentName:"tr",align:null},"hotfix-vx.y.z"),(0,a.kt)("td",{parentName:"tr",align:null},"To perform urgent bug fixes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"release")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"develop")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"main")),(0,a.kt)("td",{parentName:"tr",align:null},"release-vx.y.z"),(0,a.kt)("td",{parentName:"tr",align:null},"To prepare for release (such as fixing the version in ",(0,a.kt)("inlineCode",{parentName:"td"},"package.json"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"feature")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"develop")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"develop")),(0,a.kt)("td",{parentName:"tr",align:null},"feature-*"),(0,a.kt)("td",{parentName:"tr",align:null},"To develop new features")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"feature")," branches are managed ",(0,a.kt)("strong",{parentName:"p"},"locally"),"."),(0,a.kt)("p",null,"Please create pull requests to the ",(0,a.kt)("inlineCode",{parentName:"p"},"develop")," branch as a general rule."),(0,a.kt)("h2",{id:"release-cycle"},"Release cycle"),(0,a.kt)("p",null,"Unless there are exceptions, thinkerAI transitions to the ",(0,a.kt)("inlineCode",{parentName:"p"},"release")," branch after half a year to 8 months from the previous major version.\nMajor versions are released approximately ",(0,a.kt)("strong",{parentName:"p"},"every 6 months"),"."),(0,a.kt)("h3",{id:"versioning"},"Versioning"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If a function that breaks compatibility is added or deleted, update the major version as ",(0,a.kt)("inlineCode",{parentName:"li"},"v2.0.0"),"."),(0,a.kt)("li",{parentName:"ul"},"If a function is added while maintaining compatibility, update the minor version as ",(0,a.kt)("inlineCode",{parentName:"li"},"v1.1.0"),"."),(0,a.kt)("li",{parentName:"ul"},"If there are changes that are not noticeable to users, such as minor bug fixes, update the patch version as ",(0,a.kt)("inlineCode",{parentName:"li"},"v1.0.1"),".")))}m.isMDXComponent=!0}}]);